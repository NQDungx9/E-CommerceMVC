@model E_CommerceCoreMVC.Models.ProductQuantityModel

@{
    ViewData["Title"] = "Create Quantity";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var total_quantity = 0;
    var key = 1;
}
<partial name="Notification">
<h1>Create Quantity</h1>

<h4>Quantity</h4>
<hr />
<div class="row" style="padding-left: 10px;">
    <div class="col-md-8">
        <form asp-action="StoreProductQuantity" asp-controller="Product">
            <input type="hidden" name="ProductId" value="@ViewBag.Id" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input min="1" value="1" max="2000 " asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>

        <h3>Existing Product Quantities</h3>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Key</th>
                    <th>Quantity Added</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in ViewBag.ProductByQuantity)
                {
                    total_quantity += item.Quantity;
                    <tr>
                        <td>@key</td>
                        <td>@item.Quantity</td>
                        <td>@item.CreatedDate</td>
                    </tr>
                    key++;
                }
                <tr>
                    <td>Total Quantity: @total_quantity</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>



<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


